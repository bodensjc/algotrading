price = learning_data[1,]
learning_data <- read_csv("learning_data.csv")
library(keras)
library(tidyverse)
library(readr)
library(tibble)
learning_data <- read_csv("learning_data.csv")
price = learning_data[1,]
price = learning_data[1]
learning_data <- read_csv("learning_data.csv")
price = learning_data[1]
train_data = learning_data[2:]
train_data = learning_data[2:6]
train_data = learning_data[,1:500]
train_data = learning_data[1:500]
train_data = learning_data[1:500,]
val_data = learning_data[500:800,]
test_data = learning_data[800:,]
test_data = learning_data[800:966,]
train_data = learning_data[1:500,]
val_data = learning_data[501:800,]
test_data = learning_data[801:966,]
gp=ggplot()+
geom_line(data=df.train,aes(X,Y),color="red")+
geom_line(data=df.valid,aes(X,Y),color="black")+
xlab("Time")+ylab("ADA price (USD)")+
geom_line(data=df.test,aes(X,Y),color="blue")
gp=ggplot()+
geom_line(data=map(aes(train_data[`time`], train_data[`close`])),color="red")
gp=ggplot()+
geom_line(data=aes(train_data[`time`], train_data[`close`]),color="red")
train_data[`time`]
train_data <- tibble(learning_data[1:500,])
gp=ggplot()+
geom_line(data=aes(train_data[`time`], train_data[`close`]),color="red")
gp=ggplot()+
geom_line(data=aes(train_data$time, train_data$close),color="red")
train_data <- learning_data[1:500,]
gp=ggplot()+
geom_line(data=aes(train_data$time, train_data$close),color="red")
train_data$time
train_data <- as_tibble(learning_data[1:500,])
train_data$time
gp=ggplot()+
geom_line(data=aes(train_data$time, train_data$close),color="red")
train_data <- as_data_frame(learning_data[1:500,])
library(keras)
library(tidyverse)
library(readr)
library(tibble)
learning_data <- read_csv("learning_data.csv")
price = learning_data[1]
train_data <- as_data_frame(learning_data[1:500,])
val_data <- learning_data[501:800,]
test_data <- learning_data[801:966,]
gp=ggplot()+
geom_line(data=aes(train_data$time, train_data$close),color="red")
gp=ggplot()+
geom_line(aes(x=train_data$time, y=train_data$close),color="red")
ggplot()+
geom_line(aes(x=train_data$time, y=train_data$close),color="red")
ggplot()+
geom_point(aes(x=train_data$time, y=train_data$close),color="red")
learning_data <- read_csv("learning_data.csv")
price = learning_data[1]
train_data <- as_data_frame(learning_data[1:500,])
val_data <- learning_data[501:800,]
test_data <- learning_data[801:966,]
ggplot()+
geom_point(aes(x=train_data$time, y=train_data$close),color="red")
ggplot()+
geom_point(aes(x=train_data$time, y=train_data$close),color="red")+
geom_line(aes(x=val_data$time, y=val_data$close),color="black")+
xlab("Time")+ylab("ADA price (USD)")+
geom_line(aes(x=test_data$time, y=test_data$close),color="blue")
ggplot()+
geom_point(aes(x=train_data$time, y=train_data$close),color="red")+
geom_point(aes(x=val_data$time, y=val_data$close),color="black")+
xlab("Time")+ylab("ADA price (USD)")+
geom_point(aes(x=test_data$time, y=test_data$close),color="blue")
View(test_data)
View(test_data)
ggplot()+
geom_line(aes(x=train_data$time, y=train_data$close),color="red")+
geom_line(aes(x=val_data$time, y=val_data$close),color="black")+
xlab("Time")+ylab("ADA price (USD)")+
geom_line(aes(x=test_data$time, y=test_data$close),color="blue")
ggplot()+
geom_line(aes(x=train_data$time, y=train_data$close, group=1),color="red")+
geom_line(aes(x=val_data$time, y=val_data$close, group=1),color="black")+
xlab("Time")+ylab("ADA price (USD)")+
geom_line(aes(x=test_data$time, y=test_data$close, group=1),color="blue")
View(train_data)
View(train_data)
View(val_data)
View(val_data)
learning_data <- read_csv("learning_data.csv")
train_data <- as_data_frame(learning_data[1:500,])
val_data <- s_data_frame(learning_data[501:800,])
test_data <- s_data_frame(learning_data[801:966,])
ggplot()+
geom_line(aes(x=train_data$time, y=train_data$close, group=1),color="red")+
geom_line(aes(x=val_data$time, y=val_data$close, group=1),color="black")+
xlab("Time")+ylab("ADA price (USD)")+
geom_line(aes(x=test_data$time, y=test_data$close, group=1),color="blue")
View(learning_data)
View(learning_data)
View(learning_data)
View(learning_data)
